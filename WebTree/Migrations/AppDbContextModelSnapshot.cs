// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebTree.DbObjects;

#nullable disable

namespace WebTree.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebTree.DbObjects.JournalRecordDbObject", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id"));

                    b.Property<string>("Body")
                        .HasColumnType("text");

                    b.Property<string>("EventId")
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("Querry")
                        .HasColumnType("text");

                    b.Property<string>("Stacktrace")
                        .HasColumnType("text");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.ToTable("JournalRecords");
                });

            modelBuilder.Entity("WebTree.DbObjects.TreeNameDbObject", b =>
                {
                    b.Property<long>("TreeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("TreeId"));

                    b.Property<string>("TreeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TreeId");

                    b.HasAlternateKey("TreeName");

                    b.ToTable("Names");
                });

            modelBuilder.Entity("WebTree.DbObjects.TreeNodeDbObject", b =>
                {
                    b.Property<long>("TreeId")
                        .HasColumnType("bigint");

                    b.Property<long>("NodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("NodeId"));

                    b.Property<string>("NodeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("ParentNodeId")
                        .HasColumnType("bigint");

                    b.HasKey("TreeId", "NodeId");

                    b.HasAlternateKey("TreeId", "ParentNodeId", "NodeName");

                    b.HasIndex("TreeId", "ParentNodeId");

                    b.ToTable("Nodes");
                });

            modelBuilder.Entity("WebTree.DbObjects.TreeNodeDbObject", b =>
                {
                    b.HasOne("WebTree.DbObjects.TreeNameDbObject", "Tree")
                        .WithMany("TreeNodes")
                        .HasForeignKey("TreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tree");
                });

            modelBuilder.Entity("WebTree.DbObjects.TreeNameDbObject", b =>
                {
                    b.Navigation("TreeNodes");
                });
#pragma warning restore 612, 618
        }
    }
}
